<?php

namespace App\Filament\Resources\CRM\OpportunityResource\RelationManagers;

use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\RelationManagers\RelationManager;
use Filament\Tables;
use Filament\Tables\Table;

class ActivitiesRelationManager extends RelationManager
{
    protected static string $relationship = 'activities';

    public function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Select::make('type')
                    ->options([
                        'call' => 'Call',
                        'email' => 'Email',
                        'meeting' => 'Meeting',
                        'task' => 'Task',
                        'note' => 'Note',
                    ])
                    ->required()
                    ->default('note'),

                Forms\Components\TextInput::make('subject')
                    ->required()
                    ->maxLength(255)
                    ->columnSpanFull(),

                Forms\Components\Textarea::make('body')
                    ->rows(4)
                    ->columnSpanFull(),

                Forms\Components\DateTimePicker::make('due_at')
                    ->label('Due Date')
                    ->native(false),

                Forms\Components\DateTimePicker::make('done_at')
                    ->label('Completed Date')
                    ->native(false),

                Forms\Components\Select::make('owner_id')
                    ->label('Owner')
                    ->relationship('owner', 'name')
                    ->searchable()
                    ->preload()
                    ->default(fn() => auth()->id())
                    ->required(),
            ])
            ->columns(2);
    }

    public function table(Table $table): Table
    {
        return $table
            ->recordTitleAttribute('subject')
            ->columns([
                Tables\Columns\BadgeColumn::make('type')
                    ->colors([
                        'primary' => 'call',
                        'success' => 'email',
                        'warning' => 'meeting',
                        'info' => 'task',
                        'gray' => 'note',
                    ]),

                Tables\Columns\TextColumn::make('subject')
                    ->searchable()
                    ->weight('medium'),

                Tables\Columns\TextColumn::make('owner.name')
                    ->label('Owner'),

                Tables\Columns\TextColumn::make('due_at')
                    ->dateTime()
                    ->sortable(),

                Tables\Columns\IconColumn::make('done_at')
                    ->label('Done')
                    ->boolean()
                    ->trueIcon('heroicon-o-check-circle')
                    ->falseIcon('heroicon-o-clock')
                    ->trueColor('success')
                    ->falseColor('gray')
                    ->getStateUsing(fn($record) => $record->done_at !== null),

                Tables\Columns\TextColumn::make('created_at')
                    ->dateTime()
                    ->sortable()
                    ->since()
                    ->toggleable(),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('type')
                    ->options([
                        'call' => 'Call',
                        'email' => 'Email',
                        'meeting' => 'Meeting',
                        'task' => 'Task',
                        'note' => 'Note',
                    ]),

                Tables\Filters\TernaryFilter::make('done_at')
                    ->label('Completed')
                    ->placeholder('All activities')
                    ->trueLabel('Completed')
                    ->falseLabel('Pending')
                    ->queries(
                        true: fn($query) => $query->whereNotNull('done_at'),
                        false: fn($query) => $query->whereNull('done_at'),
                    ),
            ])
            ->headerActions([
                Tables\Actions\CreateAction::make()
                    ->mutateFormDataUsing(function (array $data): array {
                        $data['opportunity_id'] = $this->getOwnerRecord()->id;
                        return $data;
                    }),
            ])
            ->actions([
                Tables\Actions\Action::make('mark_done')
                    ->label('Mark Done')
                    ->icon('heroicon-o-check')
                    ->color('success')
                    ->action(fn($record) => $record->update(['done_at' => now()]))
                    ->visible(fn($record) => $record->done_at === null),

                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('created_at', 'desc');
    }
}
